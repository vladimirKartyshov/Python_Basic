# Перед изучением функций из программирования Саша решил освежить знания о функциях математики. Помогите Саше написать программу, которая будет считать значение функции в каждой точке отрезка с нужным шагом, начиная с конца.

# Что нужно сделать
# Напишите программу, которая получает на вход начало и конец отрезка, а также шаг (отрицательный), а затем высчитывает функцию y в каждой точке отрезка и выводит на экран ответ с нужным шагом.
# Обратите внимание, что пользователь может ввести некорректные значения для диапазона или шага. Вам необходимо исправить эти значения таким образом, чтобы вывод результата не зависел от ошибочно введённых данных.

# Сама функция выглядит так:

# ‌
# ‌

# ‌Пример 1

# Введите начало отрезка: −2
# Введите конец отрезка: 2
# Введите шаг: −1

# В точке 2 функция равна 9
# В точке 1 функция равна 0
# В точке 0 функция равна 1
# В точке −1 функция равна 6
# В точке −2 функция равна 9

# ‌Пример 2 (пользователь ввёл некорректный шаг)

# Введите начало отрезка: 14
# Введите конец отрезка: 9
# Введите шаг: 1

# В точке 14 функция равна 3081
# В точке 13 функция равна 2484
# В точке 12 функция равна 1969
# В точке 11 функция равна 1530
# В точке 10 функция равна 1161
# В точке 9 функция равна 856

# =======================================================================================================================================

# Ввод данных пользователем
a = int(input("Введите начало отрезка: "))
b = int(input("Введите конец отрезка: "))
step = int(input("Введите шаг: "))

# Определение начала и конца отрезка
start = max(a, b)
end = min(a, b)

# Корректировка шага
if step == 0:
    step = -1  # Защита от нулевого шага
elif step > 0:
    step = -step  # Делаем шаг отрицательным

# Вычисление и вывод значений функции
for x in range(start, end - 1, step):
    y = x**3 + 2*x**2 - 4*x + 1
    print(f"В точке {x} функция равна {y}")

    # =================================================================================================================================

#     Объяснение:

# Определение направления отрезка:

# start — максимальное из значений a и b (начало отсчёта).

# end — минимальное из значений (конечная точка).

# Корректировка шага:

# Если шаг положительный или нулевой, он заменяется на отрицательный (для движения от большего к меньшему).

# Цикл с генерацией точек:

# range(start, end - 1, step) гарантирует, что конечная точка end будет включена в диапазон.

# Для каждой точки вычисляется значение функции и выводится результат.

